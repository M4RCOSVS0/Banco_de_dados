CREATE DATABASE TG07;

USE TG07;


CREATE TABLE TB_FUNCIONARIO (
  MATRICULA INT NOT NULL PRIMARY KEY,
  NOME  VARCHAR(100) NOT NULL,
  CARGO VARCHAR(100) NOT NULL,
  SALARIO NUMERIC (10,2)
) 

/* Tabela para log de alteracoes na tabela de Funcionario. As alteracoes podem
   ser de tres tipos: (I - Inclusao, A - Alteracao, R - Remocao).  */


CREATE TABLE TB_LOG_FUNCIONARIO
(
    CD_LOG 		INT IDENTITY (1,1) NOT NULL,
    DT_LOG 		DATETIME NOT NULL,     -- Data em que o log foi registrado
    TIPO_OPERACAO 	CHAR(1) CHECK (TIPO_OPERACAO IN ('I','A','R')),	
    MATRICULA 		INT NOT NULL,
    NOME  		VARCHAR(100) NOT NULL,
    MODIFICACAO		VARCHAR(500) NOT NULL
)

CREATE OR ALTER TRIGGER TG_INSERCOES_FUNCIONARIO
ON TB_FUNCIONARIO
AFTER INSERT
AS
BEGIN
    DECLARE @MATRICULA  INT;
    DECLARE @NOME       VARCHAR(100);
    DECLARE @CARGO      VARCHAR(100);
    DECLARE @SALARIO    NUMERIC(10,2);

    DECLARE C_FUNCIONARIO CURSOR FOR
        SELECT matricula, nome,cargo,salario
        FROM INSERTED;

    OPEN C_FUNCIONARIO;

    FETCH NEXT FROM C_FUNCIONARIO INTO @MATRICULA,@NOME,@CARGO,@SALARIO;

    WHILE (@@FETCH_STATUS = 0)
    BEGIN
        INSERT INTO TB_LOG_FUNCIONARIO(dt_log, tipo_operacao, matricula, nome, modificacao)
        VALUES(GETDATE(),'I',@MATRICULA,@NOME,'Adcionado novo funcionario')

        FETCH NEXT FROM C_FUNCIONARIO INTO @MATRICULA,@NOME,@CARGO,@SALARIO;
    END

    CLOSE C_FUNCIONARIO;
    DEALLOCATE C_FUNCIONARIO;
end

INSERT INTO TB_FUNCIONARIO(MATRICULA, NOME, CARGO, SALARIO)
VALUES(1,'JOÃO','PEDREIRO',1420.25)

SELECT * FROM TB_LOG_FUNCIONARIO

CREATE OR ALTER TRIGGER TG_ALTERACOES_FUNCIONARIO
ON TB_FUNCIONARIO
AFTER UPDATE
AS
BEGIN
    DECLARE @MATRICULA  INT;
    DECLARE @NOME       VARCHAR(100);
    DECLARE @CARGO      VARCHAR(100);
    DECLARE @SALARIO    NUMERIC(10,2);
    DECLARE @CARGO_A      VARCHAR(100);
    DECLARE @SALARIO_A    NUMERIC(10,2);

    DECLARE C_FUNCIONARIO CURSOR FOR
        SELECT I.MATRICULA,I.NOME,I.CARGO,I.SALARIO,D.SALARIO,D.CARGO
        FROM INSERTED I
        JOIN DELETED D ON D.MATRICULA = I.MATRICULA;

    OPEN C_FUNCIONARIO;

    FETCH NEXT FROM C_FUNCIONARIO INTO @MATRICULA,@NOME,@CARGO,@SALARIO,@SALARIO_A,@CARGO_A;

    WHILE (@@FETCH_STATUS = 0)
    BEGIN

        IF @SALARIO > @SALARIO_A
            INSERT INTO TB_LOG_FUNCIONARIO(dt_log, tipo_operacao, matricula, nome, modificacao)
            VALUES(GETDATE(),'A',@MATRICULA,@NOME,'Aumento de salario');
        IF @SALARIO < @SALARIO_A
            INSERT INTO TB_LOG_FUNCIONARIO(dt_log, tipo_operacao, matricula, nome, modificacao)
            VALUES(GETDATE(),'A',@MATRICULA,@NOME,'Redução de salario');
        IF @CARGO != @CARGO_A
            INSERT INTO TB_LOG_FUNCIONARIO(dt_log, tipo_operacao, matricula, nome, modificacao)
            VALUES(GETDATE(),'A',@MATRICULA,@NOME,'Alteração de cargo');
        FETCH NEXT FROM C_FUNCIONARIO INTO @MATRICULA,@NOME,@CARGO,@SALARIO,@SALARIO_A,@CARGO_A;

    END

    CLOSE C_FUNCIONARIO;
    DEALLOCATE C_FUNCIONARIO;
end

UPDATE TB_FUNCIONARIO
SET SALARIO = 5000, CARGO = 'PROGRAMADOR'
WHERE MATRICULA = 1

SELECT * FROM TB_FUNCIONARIO

CREATE OR ALTER TRIGGER TG_REMOCAO_FUNCIONARIO
ON TB_FUNCIONARIO
AFTER DELETE
AS
BEGIN
    DECLARE @MATRICULA  INT;
    DECLARE @NOME       VARCHAR(100);
    DECLARE @CARGO      VARCHAR(100);
    DECLARE @SALARIO    NUMERIC(10,2);

    DECLARE C_FUNCIONARIO CURSOR FOR
        SELECT *
        FROM deleted;

    OPEN C_FUNCIONARIO;

    FETCH NEXT FROM C_FUNCIONARIO INTO @MATRICULA,@NOME,@CARGO,@SALARIO;

    WHILE (@@FETCH_STATUS = 0)
    BEGIN
        INSERT INTO TB_LOG_FUNCIONARIO(dt_log, tipo_operacao, matricula, nome, modificacao)
        VALUES(GETDATE(),'R',@MATRICULA,@NOME,'removido um CLT 6-1')

        FETCH NEXT FROM C_FUNCIONARIO INTO @MATRICULA,@NOME,@CARGO,@SALARIO;
    END

    CLOSE C_FUNCIONARIO;
    DEALLOCATE C_FUNCIONARIO;
end

DELETE TB_FUNCIONARIO
WHERE MATRICULA = 1