CREATE DATABASE TG04;

USE TG04;

CREATE TABLE TB_FUNCIONARIO (
    MATRICULA INT NOT NULL PRIMARY KEY,
    NOME VARCHAR(30) NOT NULL,
    SALARIO NUMERIC (10,2),
    GRATIFICACAO NUMERIC(10,2),
    DEPARTAMETO VARCHAR(30)
)

CREATE OR ALTER TRIGGER TG_SALARIO_FUNCIONARIO
ON TB_FUNCIONARIO
AFTER UPDATE
AS
BEGIN
    DECLARE @GRATIFICACAO NUMERIC(10,2);
    DECLARE @SALARIO NUMERIC(10,2);
    DECLARE @TOTAL_VELHO NUMERIC(10,2);
    DECLARE @MATRICULA INT;
    -- Cursor para iterar sobre os registros inseridos
    DECLARE C_FUNCIONARIO CURSOR FOR
        SELECT ISNULL(GRATIFICACAO, 0),MATRICULA, ISNULL(SALARIO, 0)
        FROM INSERTED;

    OPEN C_FUNCIONARIO;

    FETCH NEXT FROM C_FUNCIONARIO INTO @GRATIFICACAO,@MATRICULA,@SALARIO;

    WHILE (@@FETCH_STATUS = 0)
    BEGIN
    -- Calcula o total velho para o registro atualizado
    SELECT @TOTAL_VELHO = ISNULL(SUM(SALARIO + GRATIFICACAO), 0)
        FROM DELETED
        WHERE MATRICULA = @MATRICULA;


        -- Compara e insere no log se o total novo for maior
        IF @SALARIO + @GRATIFICACAO >= @TOTAL_VELHO * 1.3
        BEGIN
            RAISERROR ('AUMENTO MAIOR QUE 30',16,1);
		    ROLLBACK;
            RETURN
        END

        FETCH NEXT FROM C_FUNCIONARIO INTO @GRATIFICACAO,@MATRICULA,@SALARIO;
    END

    CLOSE C_FUNCIONARIO;
    DEALLOCATE C_FUNCIONARIO;
end

INSERT INTO TB_FUNCIONARIO
VALUES (2,'MARCOS',1000,NULL,'CONTABEIS')

UPDATE TB_FUNCIONARIO
SET GRATIFICACAO = 299
WHERE MATRICULA = 2

SELECT * FROM TB_FUNCIONARIO

UPDATE TB_FUNCIONARIO SET GRATIFICACAO = 450 WHERE MATRICULA = 1;