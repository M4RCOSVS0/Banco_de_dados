CREATE DATABASE AVALIACAO

USE AVALIACAO

CREATE TABLE TB_PROJETO
(
    COD_PROJETO INT          NOT NULL PRIMARY KEY,
    NM_PROJETO  VARCHAR(100) NOT NULL
)

CREATE TABLE TB_ATIVIDADE
(
    COD_ATIVIDADE        INT          NOT NULL PRIMARY KEY,
    NM_ATIVIDADE         VARCHAR(100) NOT NULL,
    DATA_PREVISTA_INICIO DATETIME     NOT NULL,
    TEMPO_PREVISTO       INT          NOT NULL,
    COD_PROJETO          INT          NOT NULL REFERENCES TB_PROJETO (COD_PROJETO)
)

CREATE TABLE TB_EXECUCAO_ATIVIDADE
(
    COD_ATIVIDADE INT      NOT NULL,
    DATA_INICIO   DATETIME NOT NULL,
    DATA_FIM      DATETIME NULL,
    PRIMARY KEY (COD_ATIVIDADE),
    FOREIGN KEY (COD_ATIVIDADE) REFERENCES TB_ATIVIDADE (COD_ATIVIDADE)
)

CREATE TABLE TB_RELATORIO_ATIVIDADES
(
    COD_ATIVIDADE    INT          NOT NULL PRIMARY KEY,
    NM_ATIVIDADE     VARCHAR(100) NOT NULL,
    NM_PROJETO       VARCHAR(100) NOT NULL,
    STATUS_ATIVIDADE VARCHAR(100) NOT NULL CHECK (STATUS_ATIVIDADE IN ('NAO INICIADA',
                                                                       'EXECUTADA EM DIA',
                                                                       'EXECUTADA COM ATRASO',
                                                                       'EM EXECUCAO EM DIA',
                                                                       'EM EXECUCAO COM ATRASO')),
)


INSERT INTO TB_PROJETO (COD_PROJETO, NM_PROJETO)
VALUES (1, 'Projeto A'), (2, 'Projeto B');

INSERT INTO TB_ATIVIDADE (COD_ATIVIDADE, NM_ATIVIDADE, DATA_PREVISTA_INICIO, TEMPO_PREVISTO, COD_PROJETO)
VALUES
(1, 'Atividade 1', '2024-10-01', 5, 1),
(2, 'Atividade 2', '2024-10-05', 3, 1),
(3, 'Atividade 3', '2024-10-10', 7, 2),
(4, 'Atividade 4', '2024-10-10', 20, 1);

INSERT INTO TB_EXECUCAO_ATIVIDADE (COD_ATIVIDADE, DATA_INICIO, DATA_FIM)
VALUES
(1, '2024-10-01', '2024-10-03'),
(2, '2024-10-05', NULL),
(3, '2024-10-10', '2024-10-18'),
(4, '2024-10-10', NULL);


DECLARE @STATUS VARCHAR(100);
EXEC SP_VERIFICAR_ATIVIDADE 1, @STATUS OUTPUT;
PRINT @STATUS;

EXEC SP_GERAR_RELATORIO_ATIVIDADES;

SELECT * FROM TB_RELATORIO_ATIVIDADES;
SELECT * FROM TB_EXECUCAO_ATIVIDADE;
SELECT * FROM TB_ATIVIDADE;
SELECT * FROM TB_PROJETO;


CREATE OR ALTER PROCEDURE SP_VERIFICAR_ATIVIDADE(@COD_ATIVIDADE INT,@STATUS VARCHAR(100) OUTPUT )
AS
BEGIN
    DECLARE @DATA_FIM DATETIME;
    DECLARE @DATA_INICIO DATETIME;
    DECLARE @TEMPO_PREVISTO INT;

    SET @DATA_FIM = (SELECT DATA_FIM FROM TB_EXECUCAO_ATIVIDADE WHERE COD_ATIVIDADE = @COD_ATIVIDADE);
    SET @DATA_INICIO = (SELECT DATA_INICIO FROM TB_EXECUCAO_ATIVIDADE WHERE COD_ATIVIDADE = @COD_ATIVIDADE);
    SET @TEMPO_PREVISTO = (SELECT TEMPO_PREVISTO FROM TB_ATIVIDADE WHERE COD_ATIVIDADE = @COD_ATIVIDADE);

    IF (SELECT COD_ATIVIDADE FROM TB_EXECUCAO_ATIVIDADE WHERE COD_ATIVIDADE = @COD_ATIVIDADE) IS NULL
    BEGIN
        SET @STATUS = 'NAO INICIADA'
    end

    IF @DATA_FIM IS NOT NULL
    BEGIN
        IF DATEDIFF(DAY,@DATA_INICIO,@DATA_FIM) <= @TEMPO_PREVISTO
            SET @STATUS = 'EXECUTADA EM DIA'
        ELSE
            SET @STATUS = 'EXECUTADA COM ATRASO'
    end

    IF @DATA_FIM IS NULL
    BEGIN
        IF DATEDIFF(DAY,@DATA_INICIO,GETDATE()) <= @TEMPO_PREVISTO
            SET @STATUS = 'EM EXECUCAO EM DIA'
        ELSE
            SET @STATUS = 'EM EXECUCAO COM ATRASO'
    end

end

CREATE OR ALTER PROCEDURE SP_GERAR_RELATORIO_ATIVIDADES
AS
BEGIN
    DECLARE @COD_ATIVIDADE INT;
    DECLARE @NM_ATIVIDADE VARCHAR(100);
    DECLARE @NM_PROJETO VARCHAR(100);
    DECLARE @STATUS_ATIVIDADE VARCHAR(100);

    DECLARE C_ATIVIDADE CURSOR FOR
        SELECT
            ta.COD_ATIVIDADE,ta.NM_ATIVIDADE,tp.NM_PROJETO
        FROM
            TB_ATIVIDADE ta
        JOIN
            TB_PROJETO tp on tp.COD_PROJETO = ta.COD_PROJETO

    OPEN C_ATIVIDADE
    FETCH C_ATIVIDADE INTO @COD_ATIVIDADE,@NM_ATIVIDADE,@NM_PROJETO;
    WHILE (@@FETCH_STATUS = 0)
    BEGIN
        EXEC SP_VERIFICAR_ATIVIDADE @COD_ATIVIDADE,@STATUS_ATIVIDADE OUTPUT;

        INSERT INTO TB_RELATORIO_ATIVIDADES(COD_ATIVIDADE, NM_ATIVIDADE, NM_PROJETO, STATUS_ATIVIDADE)
        VALUES(@COD_ATIVIDADE,@NM_ATIVIDADE,@NM_PROJETO,@STATUS_ATIVIDADE)

        FETCH C_ATIVIDADE INTO @COD_ATIVIDADE,@NM_ATIVIDADE,@NM_PROJETO;
    end
    CLOSE C_ATIVIDADE
    DEALLOCATE C_ATIVIDADE
end

EXEC SP_GERAR_RELATORIO_ATIVIDADES;