CREATE DATABASE EX10;

USE EX10;

CREATE TABLE TB_CLIENTE (
  CD_CLIENTE INT NOT NULL PRIMARY KEY,
  NM_CLIENTE VARCHAR(60) NOT NULL,
  CPF INT NULL,
  DT_INCLUSAO DATETIME NOT NULL
)


CREATE TABLE TB_VENDAS (
   CD_VENDA INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
   DT_VENDA DATETIME NOT NULL,
   CD_CLIENTE INT NOT NULL,
   CD_PRODUTO INT NOT NULL,
   QUANTIDADE INT NOT NULL,
   VALOR_TOTAL NUMERIC(10,2) NOT NULL
)


CREATE TABLE TB_CLIENTE_ALVO (
  CD_CLIENTE INT NOT NULL PRIMARY KEY,
  NM_CLIENTE VARCHAR(60) NOT NULL,
  CPF INT NULL,
  DT_INCLUSAO DATETIME NOT NULL
)

CREATE TABLE TB_CLIENTE_PARCEIRO (
  CD_CLIENTE INT NOT NULL PRIMARY KEY,
  NM_CLIENTE VARCHAR(60) NOT NULL,
  CPF INT NULL,
  DT_INCLUSAO DATETIME NOT NULL
)

CREATE PROCEDURE SP_CLASSIFICA_CLIENTE
    @DT_INCLUSAO DATETIME,
    @QTD_PRODUTOS INT,
    @CLASSIFICACAO VARCHAR(10) OUTPUT
AS
BEGIN
    -- Regra de classificação
    IF @DT_INCLUSAO >= '2018-03-01' OR @QTD_PRODUTOS > 50
        SET @CLASSIFICACAO = 'PARCEIRO'
    ELSE
        SET @CLASSIFICACAO = 'ALVO'
END

CREATE PROCEDURE SP_COPIA_CLIENTE
AS
BEGIN
    DECLARE @CD_CLIENTE INT,
            @NM_CLIENTE VARCHAR(60),
            @CPF INT,
            @DT_INCLUSAO DATETIME,
            @QTD_PRODUTOS INT,
            @CLASSIFICACAO VARCHAR(10)

    -- Cursor para varrer a tabela TB_CLIENTE
    DECLARE Cliente_Cursor CURSOR FOR
    SELECT CD_CLIENTE, NM_CLIENTE, CPF, DT_INCLUSAO
    FROM TB_CLIENTE

    OPEN Cliente_Cursor
    FETCH NEXT FROM Cliente_Cursor INTO @CD_CLIENTE, @NM_CLIENTE, @CPF, @DT_INCLUSAO

    WHILE @@FETCH_STATUS = 0
    BEGIN
        -- Calculando a quantidade de produtos comprados pelo cliente
        SELECT @QTD_PRODUTOS = SUM(QUANTIDADE)
        FROM TB_VENDAS
        WHERE CD_CLIENTE = @CD_CLIENTE

        -- Chamando o procedimento de classificação
        EXEC SP_CLASSIFICA_CLIENTE @DT_INCLUSAO, @QTD_PRODUTOS, @CLASSIFICACAO OUTPUT

        -- Copiando as informações para a tabela correspondente
        IF @CLASSIFICACAO = 'PARCEIRO'
        BEGIN
            INSERT INTO TB_CLIENTE_PARCEIRO (CD_CLIENTE, NM_CLIENTE, CPF, DT_INCLUSAO)
            VALUES (@CD_CLIENTE, @NM_CLIENTE, @CPF, @DT_INCLUSAO)
        END
        ELSE
        BEGIN
            INSERT INTO TB_CLIENTE_ALVO (CD_CLIENTE, NM_CLIENTE, CPF, DT_INCLUSAO)
            VALUES (@CD_CLIENTE, @NM_CLIENTE, @CPF, @DT_INCLUSAO)
        END

        -- Próximo cliente
        FETCH NEXT FROM Cliente_Cursor INTO @CD_CLIENTE, @NM_CLIENTE, @CPF, @DT_INCLUSAO
    END

    -- Fechando e desalocando o cursor
    CLOSE Cliente_Cursor
    DEALLOCATE Cliente_Cursor
END


