CREATE DATABASE DB_PROVA22;

USE DB_PROVA22;

--1
CREATE TABLE TB_PROJETO(
    COD INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    NOME VARCHAR(60) UNIQUE NOT NULL,
    AREA VARCHAR(10) NOT NULL CHECK (AREA IN ('APOIO', 'LOGISTICA', 'VENDAS')),
    DESCRICAO VARCHAR(100)
)

CREATE TABLE TB_FASE(
    COD INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
    NOME VARCHAR(45),
    DESCRICAO VARCHAR(100),
    COD_PROJETO INT NOT NULL,
    FOREIGN KEY (COD_PROJETO) REFERENCES TB_PROJETO(COD)
)

CREATE TABLE TB_RECURSO(
    MATRICULA INT PRIMARY KEY NOT NULL IDENTITY (1,1),
    NOME VARCHAR(45) NOT NULL ,
    FUNCAO VARCHAR(30) NOT NULL CHECK  (FUNCAO IN('PROGRAMADOR','ANALISTA','GERENTE'))
)

CREATE TABLE TB_RECURSO_FASE(
    COD_RECURSO INT NOT NULL,
    COD_FASE INT NOT NULL,
    FOREIGN KEY (COD_RECURSO) REFERENCES TB_RECURSO(MATRICULA),
    FOREIGN KEY (COD_FASE) REFERENCES TB_FASE(COD),
    PRIMARY KEY(COD_RECURSO,COD_FASE)
)

--2
-- Insert into TB_PROJETO
INSERT INTO TB_PROJETO (NOME, AREA, DESCRICAO) VALUES
('PROJETO A', 'APOIO', 'Descrição do PROJETO A'),
('PROJETO B', 'LOGISTICA', 'Descrição do PROJETO B'),
('PROJETO C', 'VENDAS', 'Descrição do PROJETO C'),
('PROJETO D', 'LOGISTICA', 'Descrição do PROJETO D'),
('PROJETO E', 'APOIO', 'Descrição do PROJETO E');

-- Insert into TB_FASE
INSERT INTO TB_FASE (NOME, DESCRICAO, COD_PROJETO) VALUES
('Fase 1', 'Descrição da Fase 1', 1),
('Fase 2', 'Descrição da Fase 2', 2),
('Fase 3', 'Descrição da Fase 3', 3),
('Fase 4', 'Descrição da Fase 4', 4),
('Fase 5', 'Descrição da Fase 5', 5);

-- Insert into TB_RECURSO
INSERT INTO TB_RECURSO (NOME, FUNCAO) VALUES
('Recurso 1', 'PROGRAMADOR'),
('Recurso 2', 'ANALISTA'),
('Recurso 3', 'GERENTE'),
('Recurso 4', 'PROGRAMADOR'),
('Recurso 5', 'ANALISTA');

-- Insert into TB_RECURSO_FASE
INSERT INTO TB_RECURSO_FASE (COD_RECURSO, COD_FASE) VALUES
(1, 1),
(2, 2),
(3, 3),
(4, 4),
(5, 5);

--3
UPDATE TB_PROJETO
SET NOME = 'PROJETO BOM', DESCRICAO = 'BOM DO CNS'
WHERE COD = 1

--4
--A
SELECT
    MATRICULA, NOME, FUNCAO
FROM
    TB_RECURSO
WHERE
    FUNCAO = 'ANALISTA'

--B
SELECT
    TP.COD,
    TP.NOME,
    TF.NOME
FROM
    TB_PROJETO TP
JOIN
    TB_FASE TF on tp.COD = TF.COD_PROJETO

--C
SELECT
    TR.MATRICULA,
    TR.NOME
FROM
    TB_PROJETO TP
JOIN
    TB_FASE TF on TP.COD = TF.COD_PROJETO
JOIN
    TB_RECURSO_FASE TRF on TF.COD = TRF.COD_FASE
JOIN
    TB_RECURSO TR on TR.MATRICULA = TRF.COD_RECURSO
WHERE
    TP.COD = 2

--D
SELECT
    TR.MATRICULA,
    TR.NOME,
    TP.NOME,
    TF.NOME
FROM
    TB_PROJETO TP
JOIN
    TB_FASE TF on TP.COD = TF.COD_PROJETO
JOIN
    TB_RECURSO_FASE TRF on TF.COD = TRF.COD_FASE
JOIN
    TB_RECURSO TR on TR.MATRICULA = TRF.COD_RECURSO



